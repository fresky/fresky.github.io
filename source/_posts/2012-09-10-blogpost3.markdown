---
layout: post
title: "FreeEverything-基于everything的一个简易磁盘清理工具"
date: 2012-09-10
comments: true
categories: 
---
<p>用Visual Studiode attach to process调试时，无论你有没有设置symbol path，Visual Studio都会把下载的symbol乱放，特别是会放到solution下面，导致文件夹很乱，所以写了一个小工具来删除这些symbol文件夹。同时也能删除resharper和mstest的临时文件。</p>
<p><a href="http://www.voidtools.com/">Everything</a>是一个非常快的磁盘搜索，正好基于他的<a href="http://support.voidtools.com/everything/SDK">SDK</a>来做这个小工具。</p>
<p>界面如下：</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/fresky/201209/20120910114000832.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="image" src="http://images.cnblogs.com/cnblogs_com/fresky/201209/201209101140028749.png" alt="image" width="422" height="319" border="0" /></a></p>
<p>搜索因为是基于Everything的，所以很快。可以增加新的过滤，用正则表达式搜索，这些过滤存放在启动目录下的GarbageCan.xml里面。还能对搜索到的结果计算大小（如果文件很多会比较慢）。</p>
<p>源代码放在<a href="https://github.com/fresky/FreeEverything">Github</a>上，可执行文件在<a href="https://github.com/fresky/FreeEverything/blob/master/FreeEverything.zip">这里</a>下载。</p>
<p>1. 使用<a href="http://www.galasoft.ch/mvvm/">MVVMLight</a>这个mvvm的框架，这个框架很容易上手。</p>
<p>2. 使用XmlSerializer存储filter配置文件。</p>
<p>3. 检查everything是否启动。</p>
<div class="cnblogs_code" style="background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> StartEverything()
        {
            Regex regex </span>= <span style="color: #0000ff;">new</span> Regex(<span style="color: #800000;">@"</span><span style="color: #800000;">Everything([-.0-9])</span><span style="color: #800000;">"</span><span style="color: #000000;">);
            </span><span style="color: #0000ff;">bool</span> found = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">var</span> process <span style="color: #0000ff;">in</span><span style="color: #000000;"> Process.GetProcesses())
            {
                </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (regex.Match(process.ProcessName).Success)
                {
                    found </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
                    </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
                }

            }
            </span><span style="color: #0000ff;">if</span> (!<span style="color: #000000;">found)
            {
                ProcessStartInfo processStartInfo </span>= <span style="color: #0000ff;">new</span> ProcessStartInfo(<span style="color: #800000;">@"</span><span style="color: #800000;">ThirdParty\Everything.exe</span><span style="color: #800000;">"</span><span style="color: #000000;">);
                processStartInfo.CreateNoWindow </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
                processStartInfo.WindowStyle </span>=<span style="color: #000000;"> ProcessWindowStyle.Hidden;
                Process.Start(processStartInfo);
                m_EverythingLaunch </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
            }
        }</span></pre>
</div>
<p>4. 调用Everything SDK. Everything SDK上面就有C#的示例project，非常简单。</p>
<p>5. 删除文件。需要处理readonly的问题。</p>
<div class="cnblogs_code" style="background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;">
<pre><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span> deletePath(<span style="color: #0000ff;">string</span><span style="color: #000000;"> path)
        {
            FileSystemInfo fsi;
            </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (File.Exists(path))
            {
                fsi </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> FileInfo(path);
            }
            </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span><span style="color: #000000;"> (Directory.Exists(path))
            {
                fsi </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> DirectoryInfo(path);

            }
            </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
            {
                </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
            }
            deleteFileSystemInfo(fsi);
        }
        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> deleteFileSystemInfo(FileSystemInfo fsi)
        {

            fsi.Attributes </span>=<span style="color: #000000;"> FileAttributes.Normal;
            </span><span style="color: #0000ff;">var</span> di = fsi <span style="color: #0000ff;">as</span><span style="color: #000000;"> DirectoryInfo;

            </span><span style="color: #0000ff;">if</span> (di != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
            {
                </span><span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">var</span> dirInfo <span style="color: #0000ff;">in</span><span style="color: #000000;"> di.GetFileSystemInfos())
                {
                    deleteFileSystemInfo(dirInfo);
                }
            }
            fsi.Delete();
        }</span></pre>
</div>
<p>6. 计算文件大小。</p>
<div class="cnblogs_code" style="background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> CalculateSize()
        {
            </span><span style="color: #0000ff;">if</span><span style="color: #000000;">(Directory.Exists(Path))
            {
                </span><span style="color: #0000ff;">double</span> result = <span style="color: #800080;">0</span><span style="color: #000000;">;
                </span><span style="color: #0000ff;">foreach</span> (FileInfo file <span style="color: #0000ff;">in</span> <span style="color: #0000ff;">new</span> DirectoryInfo(Path).GetFiles(<span style="color: #800000;">"</span><span style="color: #800000;">*</span><span style="color: #800000;">"</span><span style="color: #000000;">, SearchOption.AllDirectories))
                    result </span>= result +<span style="color: #000000;"> file.Length;
                Size </span>=<span style="color: #000000;"> result;
            }
            </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span><span style="color: #000000;"> (File.Exists(Path))
            {
                Size </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> FileInfo(Path).Length;
            }
        }</span></pre>
</div>
<div><embed id="lingoes_plugin_object" width="0" height="0" type="application/lingoes-npruntime-capture-word-plugin" hidden="true" /></div>