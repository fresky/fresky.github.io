---
layout: post
title: "C#判断一个进程是不是64位的"
date: 2012-11-27
comments: true
categories: 
---
<p>C#中的Environment 类有 <a href="http://msdn.microsoft.com/en-us/library/system.environment.is64bitoperatingsystem%28VS.100%29.aspx">Is64BitOperatingSystem</a> 属性，可以判断当前操作系统是不是64bit的。还有<a href="http://msdn.microsoft.com/en-us/library/system.environment.is64bitprocess%28VS.100%29.aspx">Is64BitProcess</a> 属性，可以判断当前进程是不是64bit的。</p>  <p>但是如果要判断别的进程是不是64bit的，就需要用windows API，<a href="http://msdn.microsoft.com/en-us/library/ms684139%28v=vs.85%29.aspx"><code>IsWow64Process</code></a>。</p>  <div style="border-bottom: #cccccc 1px solid; border-left: #cccccc 1px solid; padding-bottom: 5px; background-color: #f5f5f5; padding-left: 5px; padding-right: 5px; border-top: #cccccc 1px solid; border-right: #cccccc 1px solid; padding-top: 5px" class="cnblogs_code">   <pre><span style="color: #0000ff">    static</span> <span style="color: #0000ff">class</span><span style="color: #000000"> ProcessDetector
    {
        </span><span style="color: #0000ff">public</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">bool</span><span style="color: #000000"> IsWin64(Process process)
        {
            </span><span style="color: #0000ff">if</span><span style="color: #000000"> (Environment.Is64BitOperatingSystem)
            {
                IntPtr processHandle;
                </span><span style="color: #0000ff">bool</span><span style="color: #000000"> retVal;

                </span><span style="color: #0000ff">try</span><span style="color: #000000">
                {
                    processHandle </span>=<span style="color: #000000"> Process.GetProcessById(process.Id).Handle;
                }
                </span><span style="color: #0000ff">catch</span><span style="color: #000000">
                {
                    </span><span style="color: #0000ff">return</span> <span style="color: #0000ff">false</span><span style="color: #000000">;
                }
                </span><span style="color: #0000ff">return</span> Win32API.IsWow64Process(processHandle, <span style="color: #0000ff">out</span> retVal) &amp;&amp;<span style="color: #000000"> retVal;
            }

            </span><span style="color: #0000ff">return</span> <span style="color: #0000ff">false</span><span style="color: #000000">;
        }
    }

    </span><span style="color: #0000ff">internal</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">class</span><span style="color: #000000"> Win32API
    {
        [DllImport(</span><span style="color: #800000">&quot;</span><span style="color: #800000">kernel32.dll</span><span style="color: #800000">&quot;</span>, SetLastError = <span style="color: #0000ff">true</span>, CallingConvention =<span style="color: #000000"> CallingConvention.Winapi)]
        [</span><span style="color: #0000ff">return</span><span style="color: #000000">: MarshalAs(UnmanagedType.Bool)]
        </span><span style="color: #0000ff">internal</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">extern</span> <span style="color: #0000ff">bool</span> IsWow64Process([In] IntPtr process, [Out] <span style="color: #0000ff">out</span> <span style="color: #0000ff">bool</span><span style="color: #000000"> wow64Process);
    }</span></pre>
</div>