---
layout: post
title: "C++中怎么阻止一个类被继承"
date: 2012-12-04
comments: true
categories: 
---
<p>C#中可以用sealed关键字，但是，C++中怎么阻止一个类被继承呢？</p>  <p>方法就是把这个类的构造函数声明成private的，这样就不能被继承了。当然更好的办法是用非技术的手段了：）</p>  <p>方法1： 构造函数private，提供一个Factory方法，缺点就是使用者必须用这个factory方法，不能直接使用这个类。</p>  <div style="border-bottom: #cccccc 1px solid; border-left: #cccccc 1px solid; padding-bottom: 5px; background-color: #f5f5f5; padding-left: 5px; padding-right: 5px; border-top: #cccccc 1px solid; border-right: #cccccc 1px solid; padding-top: 5px" class="cnblogs_code">   <pre><span style="color: #0000ff">class</span><span style="color: #000000"> NoDerive {
    NoDerive(){};
</span><span style="color: #0000ff">public</span><span style="color: #000000">:
    </span><span style="color: #0000ff">static</span> NoDerive GetNoDerive(){ <span style="color: #0000ff">return</span><span style="color: #000000"> NoDerive();};
    </span>~<span style="color: #000000">NoDerive(){};
};</span></pre>
</div>

<p>方法2： 构造函数public，但是虚拟继承自一个private构造函数，没有方法1的缺点，但是看着有点hack。</p>

<div style="border-bottom: #cccccc 1px solid; border-left: #cccccc 1px solid; padding-bottom: 5px; background-color: #f5f5f5; padding-left: 5px; padding-right: 5px; border-top: #cccccc 1px solid; border-right: #cccccc 1px solid; padding-top: 5px" class="cnblogs_code">
  <pre><span style="color: #0000ff">class</span><span style="color: #000000"> NoDerive;
</span><span style="color: #0000ff">class</span><span style="color: #000000"> NoDeriveBase
{
    friend </span><span style="color: #0000ff">class</span><span style="color: #000000"> NoDerive;
    NoDeriveBase(){};
};
</span><span style="color: #0000ff">class</span> NoDerive:<span style="color: #0000ff">private</span> <span style="color: #0000ff">virtual</span><span style="color: #000000"> NoDeriveBase {
</span><span style="color: #0000ff">public</span><span style="color: #000000">:
    NoDerive(){};
    </span>~<span style="color: #000000">NoDerive(){};
};</span></pre>
</div>