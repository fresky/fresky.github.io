---
layout: post
title: "C++怎么寻找重载函数"
date: 2012-12-10
comments: true
categories: 
---
<p><a href="http://accu.org/index.php/journals/268">ACCU :: Overload Resolution - Selecting the Function</a>这篇文章详细介绍了C++中寻找重载函数的方法。下面给个小例子吧，C++的重载有时候会违背你的直觉。</p>  <p>考虑如下代码：</p>    <div class="cnblogs_code">   <pre><span style="color: #0000ff">class</span> OverLoadBase
{
<span style="color: #0000ff">public</span>:
    <span style="color: #0000ff">int</span> DoSomething() {<span style="color: #0000ff">return</span> 0;};
};

<span style="color: #0000ff">class</span> OverLoadSub : <span style="color: #0000ff">public</span> OverLoadBase
{
<span style="color: #0000ff">public</span>:
    <span style="color: #0000ff">int</span> DoSomething(<span style="color: #0000ff">int</span> x) {<span style="color: #0000ff">return</span> 1;};
};

<span style="color: #0000ff">void</span> TestOverLoadSub()
{
    OverLoadSub b;
    b.DoSomething(); <span style="color: #008000">//这样写会编译出错</span>
}</pre>
</div>



<p>错误消息如下：</p>



<div class="cnblogs_code">
  <pre>In function '<span style="color: #0000ff">void</span> TestOverLoadSub()':
Line 17: error: no matching function <span style="color: #0000ff">for</span> call to 'OverLoadSub::DoSomething()'
compilation terminated due to -Wfatal-errors.</pre>
</div>



<p>如果换成这样：</p>



<div class="cnblogs_code">
  <pre>    b.OverLoadBase::DoSomething(); </pre>
</div>







<p>就没有问题了。或者把子类中的DoSomething（）去掉也没有问题。</p>

<p>为什么会这样呢？因为在上面那个例子中，两个DoSomething不是重载。上面的那篇文章里一开头就说“Declaring two or more items with the same name in a scope is called <em>overloading</em>”，只有在一个scope中才算重载。</p>